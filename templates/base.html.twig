<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
crossorigin="anonymous"></script>
        {# <script src="https://sdk.scdn.co/spotify-player.js"></script> #}
        {# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
        {% block stylesheets %}
            {{ encore_entry_link_tags('index') }}
        {% endblock %}

        {% block javascripts %}
            {{ encore_entry_script_tags('index') }}
        {% endblock %}
    </head>
    <body>
        {% block body %}
        {% endblock %}
    </body>
</html>
<script>


// dom load
{# document.addEventListener('DOMContentLoaded', () => {
    window.onSpotifyWebPlaybackSDKReady = () => {
    const token = 'BQCfk2-QzPVTe4OwTXbbipQrSbceZ7XhC9cqvL62frvy1bdUMshfY__Jolht_DOhI10Gb0irNybEtk2Mlw-dDwiIhLVK_UtCfvoTTDDcOPMmKV_3AQ6ACogj0-5AAyZv0_IaXR39UUVkeXIDx_qRCPbju-JgUHiMxBcTRfkw6gvrSMWNs1t_qH7LQYNxGbWSLeQ';
    const player = new Spotify.Player({
        name: 'Web Playback SDK Quick Start Player',
        getOAuthToken: cb => { cb(token); },
        volume: 0.3,
    });
    player.addListener('ready', ({ device_id }) => {
        console.log('Ready with Device ID', device_id);
    });
    // Not Ready
    player.addListener('not_ready', ({ device_id }) => {
        console.log('Device ID has gone offline', device_id);
    });
    player.addListener('initialization_error', ({ message }) => { 
        console.error(message);
    });

    player.addListener('authentication_error', ({ message }) => {
        console.error(message);
    });

    player.addListener('account_error', ({ message }) => {
        console.error(message);
    });

    document.getElementById('togglePlay').onclick = function() {
        player.togglePlay();
    };

    // previous track and next track
    document.getElementById('previous').onclick = function() {
        player.previousTrack();
    };
    document.getElementById('next').onclick = function() {
        player.nextTrack();
    };

    // and and event listener when spotifu player changes track
    player.addListener('player_state_changed', state => {
        console.log(state);
    });

    player.addListener('autoplay_failed', () => {
        console.log('Autoplay is not allowed by the browser autoplay rules');
    });



    player.connect();
    };

}); #}

</script>
